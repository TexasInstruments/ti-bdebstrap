name: Build

on:
  push:
    branches: [ "master", "dev"]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  # Job1: Prepare list of configrations for Job2
  prepare-build:
    runs-on: ubuntu-latest
    outputs:
      builds: ${{ steps.prepare-builds.outputs.builds }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate builds list
        id: prepare-builds
        run: |
          pip3 install toml-cli
          topdir=./ source scripts/common.sh
          output_string="["
          for build in ${builds[@]}
          do
            output_string="${output_string}""\"${build}\","
          done
          output_string="${output_string::-1}""]"
          echo "builds=${output_string}" >> $GITHUB_OUTPUT

  # Job2: Actual build job
  build:
    runs-on: ubuntu-latest
    needs: prepare-build
    strategy:
      matrix:
        builds: ${{ fromJson(needs.prepare-build.outputs.builds) }}
    name: ${{ matrix.builds }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt install -y \
              pigz expect pv \
              binfmtc binfmt-support \
              qemu-user qemu-user-static qemu-system-arm \
              debian-archive-keyring bdebstrap \
              build-essential autoconf automake \
              bison flex libssl-dev \
              bc u-boot-tools swig python3-pyelftools \
              gcc-aarch64-linux-gnu \
              gpg curl
          sudo apt install --fix-broken
          sudo pip3 install toml-cli
          curl -s --compressed https://texasinstruments.github.io/ti-debpkgs/KEY.gpg | \
              gpg --dearmor | \
              sudo tee /usr/share/keyrings/ti-debpkgs.gpg > /dev/null

      - name: Build ${{ matrix.builds }}
        run: |
          mkdir -p build
          sudo ./build.sh ${{ matrix.builds }}

      - name: Upload ${{ matrix.builds }}
        uses: actions/upload-artifact@v3.1.2
        with:
          path: build/${{ matrix.builds }}.tar.xz
          name: ${{ matrix.builds }}
          if-no-files-found: error

